<project name="JDEECo-Core" default="convoy-local" basedir=".">
	<description>JDEECo build file</description>

	<property name="dist" location="."/>
	<property name="src" location="${dist}/../jdeeco-core/src"/>
	<property name="demo" location="${dist}/../jdeeco-demo/src"/>
	<property name="demo-libs" location="${dist}/../jdeeco-demo/libs"/>
	<property name="river" location="${dist}/apache-river"/>
	<property name="jpf" location="${dist}/jpf-core"/>
	<property name="spl" location="${dist}/../jdeeco-demo/libs/spl-agent.jar"/>

	<!-- start apache river - individual services -->
	<target name="start-ar-httpd">
		<java fork="true" jar="${river}/lib/classserver.jar" dir="${dist}">
			<arg line="-port 8080 -dir"/>
			<arg path="${river}/lib:${river}/lib-dl"/>
		</java>
	</target>

	<target name="start-ar-jrmp-reggie">
		<java fork="true" jar="${river}/lib/start.jar" dir="${dist}">
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.ext.dirs=${river}/lib-ext"/>
			<arg path="${river}-config/start-reggie.config"/>
		</java>
	</target>

	<target name="start-ar-jrmp-mahalo-group">
		<java fork="true" jar="${river}/lib/start.jar" dir="${dist}">
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<arg path="${river}-config/start-mahalo-group.config"/>
		</java>
	</target>

	<target name="start-ar-jrmp-outrigger-group">
		<java fork="true" jar="${river}/lib/start.jar" dir="${dist}">
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<arg path="${river}-config/start-outrigger-group.config"/>
		</java>
	</target>

	<!-- start apache river - main task -->
	<target name="start-ar"
		description="Starts the Apache River">
		<parallel>
			<antcall target="start-ar-httpd"/>
			<antcall target="start-ar-jrmp-reggie"/>
			<antcall target="start-ar-jrmp-outrigger-group"/>
			<antcall target="start-ar-jrmp-mahalo-group"/>
		</parallel>
	</target>

	<!-- start cloud demo with local shared memory -->
	<target name="cloud-local" description="Runs the cloud demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.loadratio.LocalLauncherCloudNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>
	
	<!-- start min load cloud demo with local shared memory -->
	<target name="cloud-local-minload" description="Runs the minload cloud demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.candidates.LocalLauncherCandidateNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>
	
	<!-- start min load cloud demo using SPL with local shared memory -->
	<target name="cloud-local-minload-spl" description="Runs the minload spl cloud demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.candidates.LocalLauncherCandidateSPLNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
				<pathelement location="${spl}"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>
	
	<!-- start deployment cloud scenario demo with local shared memory -->
	<target name="cloud-local-scenario-deployment" description="Runs the deployment cloud scenario demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.scenarios.deployment.LocalLauncherDSNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
				<pathelement location="${spl}"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>
	
	<!-- start highload cloud scenario demo with local shared memory -->
	<target name="cloud-local-scenario-highload" description="Runs the highload cloud scenario demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.scenarios.highload.LocalLauncherHSNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
				<pathelement location="${spl}"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>
	
	<!-- start shutdown cloud scenario demo with local shared memory -->
	<target name="cloud-local-scenario-shutdown" description="Runs the shutdown cloud scenario demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.scenarios.shutdown.LocalLauncherSSNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
				<pathelement location="${spl}"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>

	<!-- start convoy demo with local shared memory -->
	<target name="convoy-local" description="Runs the convoy demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.convoy.LocalLauncherConvoyNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/convoy.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>

	<!-- start cloud demo with tuple spaces as shared memory -->
	<target name="cloud-ts" description="Runs the cloud demo">		
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.TSLauncherCloudNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>

	<!-- start convoy demo with tuple spaces as shared memory -->
	<target name="convoy-ts" description="Runs the convoy demo">				
		<java classname="cz.cuni.mff.d3s.deeco.demo.convoy.TSLauncherConvoyNoJPF" fork="true" >
			<classpath>
				<pathelement location="${dist}/convoy.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>			
	</target>


	<!-- run cloud demo under jpf -->
	<target name="jpf-cloud">
		<java fork="true" classname="cz.cuni.mff.d3s.deeco.runtime.PreprocessorLauncher" dir="${dist}">
			<arg value="cloud.jar"/>
			<classpath>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${dist}/sde/cz.cuni.mff.d3s.bcel-1.0.0.jar"/>
			</classpath>
		</java>
		<java fork="true" jar="${jpf}/build/RunJPF.jar" dir="${dist}">
			<jvmarg value="-Djdeeco-dist=${dist}"/>
			<jvmarg value="-Djdeeco-src=${src}"/>
			<jvmarg value="-Djdeeco-src-demo=${demo}"/>
			<arg value="+classpath=${dist}/cloud.jar,${dist}/jdeeco.jar"/>
			<arg value="+jpf-core.native_classpath+=;${dist}/jdeeco.jar;${dist}/jdeeco-jpf.jar"/>
			<arg value="+listener=gov.nasa.jpf.listener.AssertionProperty"/>
			<arg value="${demo}/../jpfProperties/LocalLauncherCloudJPF.jpf"/>
			<jvmarg value="-Xmx2g"/>
		</java>
	</target>

	<!-- run convoy demo under jpf -->
	<target name="jpf-convoy">
		<java fork="true" classname="cz.cuni.mff.d3s.deeco.runtime.PreprocessorLauncher" dir="${dist}">
			<arg value="convoy.jar"/>
			<classpath>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${dist}/sde/cz.cuni.mff.d3s.bcel-1.0.0.jar"/>
			</classpath>
		</java>
		<java fork="true" jar="${jpf}/build/RunJPF.jar" dir="${dist}">
			<jvmarg value="-Djdeeco-dist=${dist}"/>
			<jvmarg value="-Djdeeco-src=${src}"/>
			<jvmarg value="-Djdeeco-src-demo=${demo}"/>
			<arg value="+classpath=${dist}/convoy.jar,${dist}/jdeeco.jar"/>
			<arg value="+jpf-core.native_classpath+=;${dist}/jdeeco.jar;${dist}/jdeeco-jpf.jar"/>
			<arg value="${demo}/../jpfProperties/LocalLauncherConvoyJPF.jpf"/>
			<jvmarg value="-Xmx8g"/>
		</java>
	</target>

	<!-- check ltl properties for convoy demo -->
	<target name="ltl-convoytut">
		<java fork="true" classname="cz.cuni.mff.d3s.deeco.runtime.PreprocessorLauncher" dir="${dist}">
			<arg value="convoytut.jar"/>
			<classpath>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${dist}/jdeeco-jpf.jar"/>
				<pathelement location="${dist}/lib/bcel.jar"/>
			</classpath>
		</java>
		<java fork="true" jar="${jpf}/build/RunJPF.jar" dir="${dist}">
			<jvmarg value="-Djdeeco-dist=${dist}"/>
			<jvmarg value="-Djdeeco-src=${src}"/>
			<jvmarg value="-Djdeeco-src-demo=${demo}"/>
			<arg value="+classpath=${dist}/convoytut.jar,${dist}/jdeeco.jar,${dist}/jdeeco-jpf.jar"/>
			<arg value="+site=site.properties"/>
			<arg value="+jpf-core.native_classpath+=;${dist}/jdeeco.jar;${dist}/jdeeco-jpf.jar"/>
			<arg value="+jpf-ltl.sourcepath=${demo};{src}"/>
			<arg value="${demo}/../jpfProperties/LocalLauncherConvoyLTL.jpf"/>
			<jvmarg value="-Xmx8g"/>
		</java>
	</target>

</project>
