diff -Naur a/src/networklayer/ldp/LDP.cc b/src/networklayer/ldp/LDP.cc
--- a/src/networklayer/ldp/LDP.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/ldp/LDP.cc	2015-01-14 17:19:45.002124600 +0100
@@ -658,7 +658,7 @@
 
 void LDP::socketEstablished(int, void *yourPtr)
 {
-    peer_info& peer = myPeers[(long)yourPtr];
+    peer_info& peer = myPeers[(long long)yourPtr];
     EV << "TCP connection established with peer " << peer.peerIP << "\n";
 
     // we must update all entries with nextHop == peerIP
@@ -669,7 +669,7 @@
 
 void LDP::socketDataArrived(int, void *yourPtr, cPacket *msg, bool)
 {
-    peer_info& peer = myPeers[(long)yourPtr];
+    peer_info& peer = myPeers[(long long)yourPtr];
     EV << "Message arrived over TCP from peer " << peer.peerIP << "\n";
 
     delete msg->removeControlInfo();
@@ -678,7 +678,7 @@
 
 void LDP::socketPeerClosed(int, void *yourPtr)
 {
-    peer_info& peer = myPeers[(long)yourPtr];
+    peer_info& peer = myPeers[(long long)yourPtr];
     EV << "Peer " << peer.peerIP << " closed TCP connection\n";
 
     ASSERT(false);
@@ -695,7 +695,7 @@
 
 void LDP::socketClosed(int, void *yourPtr)
 {
-    peer_info& peer = myPeers[(long)yourPtr];
+    peer_info& peer = myPeers[(long long)yourPtr];
     EV << "TCP connection to peer " << peer.peerIP << " closed\n";
 
     ASSERT(false);
@@ -705,7 +705,7 @@
 
 void LDP::socketFailure(int, void *yourPtr, int code)
 {
-    peer_info& peer = myPeers[(long)yourPtr];
+    peer_info& peer = myPeers[(long long)yourPtr];
     EV << "TCP connection to peer " << peer.peerIP << " broken\n";
 
     ASSERT(false);
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.cc b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.cc
--- a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.cc	2015-01-14 17:48:29.839163700 +0100
@@ -79,7 +79,7 @@
     return 0;
 }
 
-void NSCLASS grat_rrep_tbl_timeout(unsigned long data)
+void NSCLASS grat_rrep_tbl_timeout(unsigned long long data)
 {
     struct grat_rrep_entry *e =
         (struct grat_rrep_entry *)tbl_detach_first(&grat_rrep_tbl);
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.h b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.h
--- a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.h	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rrep.h	2015-01-14 17:48:44.797869500 +0100
@@ -42,7 +42,7 @@
 int dsr_rrep_opt_recv(struct dsr_pkt *dp, struct dsr_rrep_opt *rrep_opt);
 int dsr_rrep_send(struct dsr_srt *srt, struct dsr_srt *srt_to_me);
 
-void grat_rrep_tbl_timeout(unsigned long data);
+void grat_rrep_tbl_timeout(unsigned long long data);
 int grat_rrep_tbl_add(struct in_addr src, struct in_addr prev_hop);
 int grat_rrep_tbl_find(struct in_addr src, struct in_addr prev_hop);
 int grat_rrep_tbl_init(void);
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.cc b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.cc
--- a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.cc	2015-01-14 17:49:55.502956100 +0100
@@ -262,7 +262,7 @@
 }
 #endif /* __KERNEL__ */
 
-void NSCLASS rreq_tbl_timeout(unsigned long data)
+void NSCLASS rreq_tbl_timeout(unsigned long long data)
 {
     struct rreq_tbl_entry *e = (struct rreq_tbl_entry *)data;
     struct timeval expires;
@@ -352,7 +352,7 @@
 
 
     e->timer->function = &NSCLASS rreq_tbl_timeout;
-    e->timer->data = (unsigned long)e;
+    e->timer->data = (unsigned long long)e;
 
     INIT_TBL(&e->rreq_id_tbl, ConfVal(RequestTableIds));
 
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.h b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.h
--- a/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.h	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/dsr-rreq.h	2015-01-14 17:50:13.531507000 +0100
@@ -40,7 +40,7 @@
 int rreq_tbl_route_discovery_cancel(struct in_addr dst);
 int dsr_rreq_route_discovery(struct in_addr target);
 int dsr_rreq_send(struct in_addr target, int ttl);
-void rreq_tbl_timeout(unsigned long data);
+void rreq_tbl_timeout(unsigned long long data);
 struct rreq_tbl_entry *__rreq_tbl_entry_create(struct in_addr node_addr);
 struct rreq_tbl_entry *__rreq_tbl_add(struct in_addr node_addr);
 int rreq_tbl_add_id(struct in_addr initiator, struct in_addr target,
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.cc b/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.cc
--- a/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.cc	2015-01-14 17:51:30.471440200 +0100
@@ -443,7 +443,7 @@
 }
 
 
-void NSCLASS maint_buf_timeout(unsigned long data)
+void NSCLASS maint_buf_timeout(unsigned long long data)
 {
     struct maint_entry *m, *m2;
 
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.h b/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.h
--- a/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.h	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/maint-buf.h	2015-01-14 17:51:39.534470900 +0100
@@ -19,7 +19,7 @@
 int maint_buf_del_all_id(struct in_addr nxt_hop, unsigned short id);
 int maint_buf_del_addr(struct in_addr nxt_hop);
 void maint_buf_set_timeout(void);
-void maint_buf_timeout(unsigned long data);
+void maint_buf_timeout(unsigned long long data);
 int maint_buf_salvage(struct dsr_pkt *dp);
 
 #endif              /* NO_DECLS */
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/neigh.cc b/src/networklayer/manetrouting/dsr/dsr-uu/neigh.cc
--- a/src/networklayer/manetrouting/dsr/dsr-uu/neigh.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/neigh.cc	2015-01-14 17:52:30.864488800 +0100
@@ -172,7 +172,7 @@
     return 0;
 }
 /* TODO: Implement neighbor table garbage collection */
-void NSCLASS neigh_tbl_garbage_timeout(unsigned long data)
+void NSCLASS neigh_tbl_garbage_timeout(unsigned long long data)
 {
     /* tbl_for_each_del(&neigh_tbl, NULL, crit_garbage); */
 
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/neigh.h b/src/networklayer/manetrouting/dsr/dsr-uu/neigh.h
--- a/src/networklayer/manetrouting/dsr/dsr-uu/neigh.h	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/neigh.h	2015-01-14 17:52:42.661846700 +0100
@@ -40,7 +40,7 @@
 int neigh_tbl_id_inc(struct in_addr neigh_addr);
 int neigh_tbl_set_rto(struct in_addr neigh_addr, struct neighbor_info *neigh_info);
 int neigh_tbl_set_ack_req_time(struct in_addr neigh_addr);
-void neigh_tbl_garbage_timeout(unsigned long data);
+void neigh_tbl_garbage_timeout(unsigned long long data);
 
 int neigh_tbl_init(void);
 void neigh_tbl_cleanup(void);
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.cc b/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.cc
--- a/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.cc	2015-01-14 17:53:43.487660400 +0100
@@ -83,7 +83,7 @@
     send_buf.max_len = max_len;
 }
 
-void NSCLASS send_buf_timeout(unsigned long data)
+void NSCLASS send_buf_timeout(unsigned long long data)
 {
     struct send_buf_entry *e;
     int pkts;
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.h b/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.h
--- a/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.h	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/send-buf.h	2015-01-14 17:53:53.470646400 +0100
@@ -42,7 +42,7 @@
 int send_buf_set_verdict(int verdict, struct in_addr dst);
 int send_buf_init(void);
 void send_buf_cleanup(void);
-void send_buf_timeout(unsigned long data);
+void send_buf_timeout(unsigned long long data);
 
 #endif              /* NO_DECLS */
 
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu/timer.h b/src/networklayer/manetrouting/dsr/dsr-uu/timer.h
--- a/src/networklayer/manetrouting/dsr/dsr-uu/timer.h	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu/timer.h	2015-01-14 17:31:25.758405600 +0100
@@ -30,7 +30,7 @@
 
 class DSRUU;
 
-typedef void (DSRUU::*fct_t) (unsigned long data);
+typedef void (DSRUU::*fct_t) (unsigned long long data);
 
 class DSRUUTimer:public TimerHandler
 {
@@ -46,8 +46,8 @@
     }
     fct_t function;
     double expires;
-    unsigned long data;
-    void init(double expires_, fct_t fct_, unsigned long data_)
+    unsigned long long data;
+    void init(double expires_, fct_t fct_, unsigned long long data_)
     {
         expires = expires_;
         data = data_;
@@ -91,7 +91,7 @@
     exp_jiffies = timeval_to_jiffies(expires);
 #else
 /* Hmm might overlflow? */
-unsigned long tmp;
+unsigned long long tmp;
 tmp = expires->tv_usec * HZ;
 tmp /= 1000000;
 exp_jiffies = expires->tv_sec * HZ + tmp;
@@ -126,7 +126,7 @@
 
 class DSRUU;
 
-typedef void (DSRUU::*fct_t) (unsigned long data);
+typedef void (DSRUU::*fct_t) (unsigned long long data);
 class DSRUUTimer:public cOwnedObject
 {
   protected:
@@ -137,7 +137,7 @@
   public:
     simtime_t expires;
     fct_t function;
-    unsigned long data;
+    unsigned long long data;
 
 
     DSRUUTimer(DSRUU * a):cOwnedObject()
@@ -162,13 +162,13 @@
     {
         a_ = a;
     }
-    void init(simtime_t expires_, fct_t fct_, unsigned long data_)
+    void init(simtime_t expires_, fct_t fct_, unsigned long long data_)
     {
         expires = expires_;
         data = data_;
         function = fct_;
     }
-    void init(fct_t fct_, unsigned long data_)
+    void init(fct_t fct_, unsigned long long data_)
     {
         expires = 0;
         data = data_;
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.cc b/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.cc
--- a/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.cc	2015-01-14 17:44:17.862795000 +0100
@@ -779,7 +779,7 @@
         return lc_srt_add(srt, timeout, flags);
 }
 
-void DSRUU::EtxMsgSend(unsigned long data)
+void DSRUU::EtxMsgSend(unsigned long long data)
 {
     EtxList neigh[15];
     DSRPktExt* msg = new DSRPktExt();
diff -Naur a/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.h b/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.h
--- a/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.h	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/manetrouting/dsr/dsr-uu-omnetpp.h	2015-01-14 17:44:41.294725900 +0100
@@ -238,7 +238,7 @@
     };
 // In dsr-uu-omnet.cc used for ETX
     ETXNeighborTable etxNeighborTable;
-    void EtxMsgSend(unsigned long data);
+    void EtxMsgSend(unsigned long long data);
     void EtxMsgProc(cMessage *msg);
     double getCost(IPv4Address add);
     void AddCost(struct dsr_pkt *,struct dsr_srt *);
diff -Naur a/src/networklayer/routing/rip/RIPRouting.cc b/src/networklayer/routing/rip/RIPRouting.cc
--- a/src/networklayer/routing/rip/RIPRouting.cc	2014-10-30 17:22:13.000000000 +0100
+++ b/src/networklayer/routing/rip/RIPRouting.cc	2015-01-14 18:01:54.708470100 +0100
@@ -261,7 +261,7 @@
     }
 
     ripRoutes.push_back(ripRoute);
-    emit(numRoutesSignal, ripRoutes.size());
+    emit(numRoutesSignal, (unsigned long int) ripRoutes.size());
     return ripRoute;
 }
 
@@ -915,7 +915,7 @@
     ripRoute->setLastUpdateTime(simTime());
     ripRoute->setChanged(true);
     ripRoutes.push_back(ripRoute);
-    emit(numRoutesSignal, ripRoutes.size());
+    emit(numRoutesSignal, (unsigned long int) ripRoutes.size());
     triggerUpdate();
 }
 
@@ -1066,7 +1066,7 @@
         ripRoutes.erase(end, ripRoutes.end());
     delete ripRoute;
 
-    emit(numRoutesSignal, ripRoutes.size());
+    emit(numRoutesSignal, (unsigned long int)ripRoutes.size());
 }
 
 /**
@@ -1167,7 +1167,7 @@
             it++;
     }
     if (emitNumRoutesSignal)
-        emit(numRoutesSignal, ripRoutes.size());
+        emit(numRoutesSignal, (long unsigned int) ripRoutes.size());
 }
 
 int RIPRouting::getInterfaceMetric(InterfaceEntry *ie)
